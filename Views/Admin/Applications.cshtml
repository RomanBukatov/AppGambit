@model List<AdminApplicationViewModel>
@{
    ViewData["Title"] = "Управление приложениями";
}

<div class="container-fluid admin-page-content">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1 class="h3">
                    <i class="fas fa-mobile-alt me-2"></i>
                    Управление приложениями
                </h1>
                <a href="@Url.Action("Index", "Admin")" class="btn btn-outline-secondary">
                    <i class="fas fa-arrow-left me-2"></i>
                    Назад к панели
                </a>
            </div>
        </div>
    </div>

    <!-- Поиск и массовые операции -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <form method="get" class="row g-3">
                        <div class="col-12 col-md-8 mb-2 mb-md-0">
                            <input type="text" class="form-control" name="search" value="@ViewBag.CurrentSearch"
                                   placeholder="Поиск по названию, описанию, автору...">
                        </div>
                        <div class="col-12 col-md-4">
                            <div class="d-flex gap-2">
                                <button type="submit" class="btn btn-primary flex-fill flex-md-grow-0">
                                    <i class="fas fa-search me-2"></i>Найти
                                </button>
                                <a href="@Url.Action("Applications", "Admin")" class="btn btn-outline-secondary">
                                    Сбросить
                                </a>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Массовые операции -->
    <div class="row mb-3" id="bulkActionsRow" style="display: none;">
        <div class="col-12">
            <div class="alert alert-info d-flex justify-content-between align-items-center">
                <div>
                    <i class="fas fa-info-circle me-2"></i>
                    Выбрано приложений: <span id="selectedCount">0</span>
                </div>
                <div class="d-flex gap-2">
                    <button type="button" class="btn btn-sm btn-outline-primary" id="selectAll">
                        <i class="fas fa-check-square me-1"></i>Выбрать все
                    </button>
                    <button type="button" class="btn btn-sm btn-outline-secondary" id="deselectAll">
                        <i class="fas fa-square me-1"></i>Снять выделение
                    </button>
                    <button type="button" class="btn btn-sm btn-danger" id="bulkDelete">
                        <i class="fas fa-trash me-1"></i>Удалить выбранные
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Список приложений -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        Приложения 
                        @if (!string.IsNullOrEmpty(ViewBag.CurrentSearch))
                        {
                            <small class="text-muted">(поиск: "@ViewBag.CurrentSearch")</small>
                        }
                    </h5>
                </div>
                <div class="card-body">
                    @if (Model.Any())
                    {
                        <!-- Таблица для десктопа -->
                        <div class="table-responsive d-none d-md-block">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th style="width: 40px;">
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" id="selectAllCheckbox">
                                            </div>
                                        </th>
                                        <th>ID</th>
                                        <th>Название</th>
                                        <th>Описание</th>
                                        <th>Автор</th>
                                        <th>Дата создания</th>
                                        <th>Скачивания</th>
                                        <th>Комментарии</th>
                                        <th>Действия</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var app in Model)
                                    {
                                        <tr>
                                            <td>
                                                <div class="form-check">
                                                    <input class="form-check-input app-checkbox" type="checkbox" value="@app.Id">
                                                </div>
                                            </td>
                                            <td>@app.Id</td>
                                            <td>
                                                <strong>@app.Name</strong>
                                            </td>
                                            <td>
                                                @if (app.Description.Length > 50)
                                                {
                                                    <span title="@app.Description">@(app.Description.Substring(0, 50))...</span>
                                                }
                                                else
                                                {
                                                    @app.Description
                                                }
                                            </td>
                                            <td>@app.UserDisplayName</td>
                                            <td>@app.CreatedAt.ToString("dd.MM.yyyy HH:mm")</td>
                                            <td>
                                                <span class="badge bg-info">@app.DownloadCount</span>
                                            </td>
                                            <td>
                                                <span class="badge bg-secondary">@app.CommentsCount</span>
                                            </td>
                                            <td>
                                                <div class="btn-group" role="group">
                                                    <a href="@Url.Action("Details", "Applications", new { id = app.Id })"
                                                       class="btn btn-sm btn-outline-primary" title="Просмотр">
                                                        <i class="fas fa-eye"></i>
                                                    </a>
                                                    <button type="button" class="btn btn-sm btn-outline-danger"
                                                            onclick="confirmDelete(@app.Id, '@app.Name')" title="Удалить">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <!-- Карточки для мобильных -->
                        <div class="d-block d-md-none">
                            @foreach (var app in Model)
                            {
                                <div class="card mb-3">
                                    <div class="card-body">
                                        <div class="d-flex justify-content-between align-items-start mb-2">
                                            <div>
                                                <h6 class="card-title mb-1">
                                                    <strong>@app.Name</strong>
                                                    <span class="badge bg-secondary ms-2">#@app.Id</span>
                                                </h6>
                                                <p class="text-muted small mb-0">@app.UserDisplayName</p>
                                            </div>
                                            <div class="btn-group" role="group">
                                                <a href="@Url.Action("Details", "Applications", new { id = app.Id })"
                                                   class="btn btn-sm btn-outline-primary" title="Просмотр">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                                <button type="button" class="btn btn-sm btn-outline-danger"
                                                        onclick="confirmDelete(@app.Id, '@app.Name')" title="Удалить">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </div>
                                        </div>
                                        
                                        <p class="card-text small text-muted mb-2">
                                            @if (app.Description.Length > 100)
                                            {
                                                <text>@(app.Description.Substring(0, 100))...</text>
                                            }
                                            else
                                            {
                                                @app.Description
                                            }
                                        </p>
                                        
                                        <div class="row g-2 small">
                                            <div class="col-6">
                                                <i class="fas fa-calendar text-muted me-1"></i>
                                                @app.CreatedAt.ToString("dd.MM.yyyy")
                                            </div>
                                            <div class="col-6 text-end">
                                                <span class="badge bg-info me-1">
                                                    <i class="fas fa-download me-1"></i>@app.DownloadCount
                                                </span>
                                                <span class="badge bg-secondary">
                                                    <i class="fas fa-comment me-1"></i>@app.CommentsCount
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>

                        <!-- Пагинация -->
                        @if (ViewBag.TotalPages > 1)
                        {
                            <nav aria-label="Навигация по страницам">
                                <ul class="pagination justify-content-center">
                                    @if (ViewBag.CurrentPage > 1)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="@Url.Action("Applications", new { search = ViewBag.CurrentSearch, page = ViewBag.CurrentPage - 1 })">
                                                Предыдущая
                                            </a>
                                        </li>
                                    }

                                    @for (int i = Math.Max(1, ViewBag.CurrentPage - 2); i <= Math.Min(ViewBag.TotalPages, ViewBag.CurrentPage + 2); i++)
                                    {
                                        <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                            <a class="page-link" href="@Url.Action("Applications", new { search = ViewBag.CurrentSearch, page = i })">
                                                @i
                                            </a>
                                        </li>
                                    }

                                    @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="@Url.Action("Applications", new { search = ViewBag.CurrentSearch, page = ViewBag.CurrentPage + 1 })">
                                                Следующая
                                            </a>
                                        </li>
                                    }
                                </ul>
                            </nav>
                        }
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-mobile-alt fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">Приложения не найдены</h5>
                            @if (!string.IsNullOrEmpty(ViewBag.CurrentSearch))
                            {
                                <p class="text-muted">Попробуйте изменить критерии поиска</p>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Модальное окно подтверждения удаления -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Подтверждение удаления</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Вы уверены, что хотите удалить приложение <strong id="appName"></strong>?</p>
                <p class="text-danger">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    Это действие нельзя отменить. Будут удалены все связанные комментарии и оценки.
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отмена</button>
                <form id="deleteForm" method="post" style="display: inline;">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-trash me-2"></i>Удалить
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <style>
        /* Мобильные улучшения для админ панели */
        @@media (max-width: 767px) {
            .pagination {
                font-size: 0.875rem;
            }
            
            .page-link {
                padding: 0.375rem 0.5rem;
            }
            
            .modal-dialog {
                margin: 1rem;
            }
            
            .alert {
                font-size: 0.875rem;
                right: 10px !important;
                left: 10px !important;
                min-width: auto !important;
            }
        }
    </style>
    
    <script>
        class BulkOperations {
            constructor() {
                this.selectedItems = new Set();
                this.init();
            }
            
            init() {
                this.bindEvents();
                this.updateUI();
            }
            
            bindEvents() {
                // Главный чекбокс
                const selectAllCheckbox = document.getElementById('selectAllCheckbox');
                if (selectAllCheckbox) {
                    selectAllCheckbox.addEventListener('change', (e) => {
                        this.toggleAll(e.target.checked);
                    });
                }
                
                // Индивидуальные чекбоксы
                document.querySelectorAll('.app-checkbox').forEach(checkbox => {
                    checkbox.addEventListener('change', (e) => {
                        this.toggleItem(e.target.value, e.target.checked);
                    });
                });
                
                // Кнопки массовых операций
                document.getElementById('selectAll')?.addEventListener('click', () => {
                    this.selectAll();
                });
                
                document.getElementById('deselectAll')?.addEventListener('click', () => {
                    this.deselectAll();
                });
                
                document.getElementById('bulkDelete')?.addEventListener('click', () => {
                    this.bulkDelete();
                });
            }
            
            toggleAll(checked) {
                document.querySelectorAll('.app-checkbox').forEach(checkbox => {
                    checkbox.checked = checked;
                    this.toggleItem(checkbox.value, checked);
                });
            }
            
            toggleItem(itemId, checked) {
                if (checked) {
                    this.selectedItems.add(itemId);
                } else {
                    this.selectedItems.delete(itemId);
                }
                this.updateUI();
            }
            
            selectAll() {
                document.querySelectorAll('.app-checkbox').forEach(checkbox => {
                    checkbox.checked = true;
                    this.selectedItems.add(checkbox.value);
                });
                document.getElementById('selectAllCheckbox').checked = true;
                this.updateUI();
            }
            
            deselectAll() {
                document.querySelectorAll('.app-checkbox').forEach(checkbox => {
                    checkbox.checked = false;
                });
                document.getElementById('selectAllCheckbox').checked = false;
                this.selectedItems.clear();
                this.updateUI();
            }
            
            updateUI() {
                const count = this.selectedItems.size;
                const bulkActionsRow = document.getElementById('bulkActionsRow');
                const selectedCountSpan = document.getElementById('selectedCount');
                
                if (count > 0) {
                    bulkActionsRow.style.display = 'block';
                    selectedCountSpan.textContent = count;
                } else {
                    bulkActionsRow.style.display = 'none';
                }
                
                // Обновляем состояние главного чекбокса
                const allCheckboxes = document.querySelectorAll('.app-checkbox');
                const checkedCheckboxes = document.querySelectorAll('.app-checkbox:checked');
                const selectAllCheckbox = document.getElementById('selectAllCheckbox');
                
                if (selectAllCheckbox) {
                    if (checkedCheckboxes.length === 0) {
                        selectAllCheckbox.checked = false;
                        selectAllCheckbox.indeterminate = false;
                    } else if (checkedCheckboxes.length === allCheckboxes.length) {
                        selectAllCheckbox.checked = true;
                        selectAllCheckbox.indeterminate = false;
                    } else {
                        selectAllCheckbox.checked = false;
                        selectAllCheckbox.indeterminate = true;
                    }
                }
            }
            
            async bulkDelete() {
                if (this.selectedItems.size === 0) {
                    this.showNotification('Не выбраны приложения для удаления', 'warning');
                    return;
                }
                
                const count = this.selectedItems.size;
                const message = `Вы уверены, что хотите удалить ${count} приложений? Это действие нельзя отменить.`;
                
                if (!confirm(message)) {
                    return;
                }
                
                try {
                    const response = await fetch('@Url.Action("BulkDeleteApplications", "Admin")', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                        },
                        body: JSON.stringify(Array.from(this.selectedItems).map(id => parseInt(id)))
                    });
                    
                    const result = await response.json();
                    
                    if (response.ok) {
                        this.showNotification(result.message, 'success');
                        // Перезагружаем страницу через небольшую задержку
                        setTimeout(() => {
                            window.location.reload();
                        }, 1500);
                    } else {
                        this.showNotification(result.error || 'Ошибка при удалении приложений', 'error');
                    }
                } catch (error) {
                    console.error('Ошибка при массовом удалении:', error);
                    this.showNotification('Произошла ошибка при удалении приложений', 'error');
                }
            }
            
            showNotification(message, type) {
                const alertClass = type === 'success' ? 'alert-success' :
                                 type === 'error' ? 'alert-danger' :
                                 type === 'warning' ? 'alert-warning' : 'alert-info';
                
                const icon = type === 'success' ? 'fa-check-circle' :
                            type === 'error' ? 'fa-exclamation-circle' :
                            type === 'warning' ? 'fa-exclamation-triangle' : 'fa-info-circle';
                
                const alert = document.createElement('div');
                alert.className = `alert ${alertClass} alert-dismissible fade show position-fixed`;
                alert.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
                alert.innerHTML = `
                    <i class="fas ${icon} me-2"></i>
                    ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                `;
                
                document.body.appendChild(alert);
                
                setTimeout(() => {
                    if (alert.parentNode) {
                        alert.parentNode.removeChild(alert);
                    }
                }, 5000);
            }
        }
        
        // Инициализация массовых операций
        let bulkOperations;
        
        function confirmDelete(appId, appName) {
            document.getElementById('appName').textContent = appName;
            document.getElementById('deleteForm').action = '@Url.Action("DeleteApplication", "Admin")';
            
            // Добавляем скрытое поле с ID
            const existingInput = document.querySelector('#deleteForm input[name="id"]');
            if (existingInput) {
                existingInput.remove();
            }
            
            const input = document.createElement('input');
            input.type = 'hidden';
            input.name = 'id';
            input.value = appId;
            document.getElementById('deleteForm').appendChild(input);
            
            const modal = new bootstrap.Modal(document.getElementById('deleteModal'));
            modal.show();
        }
        
        // Инициализация при загрузке страницы
        document.addEventListener('DOMContentLoaded', function() {
            bulkOperations = new BulkOperations();
        });

        // Показываем уведомления
        @if (TempData["SuccessMessage"] != null)
        {
            <text>
            document.addEventListener('DOMContentLoaded', function() {
                showNotification('@TempData["SuccessMessage"]', 'success');
            });
            </text>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <text>
            document.addEventListener('DOMContentLoaded', function() {
                showNotification('@TempData["ErrorMessage"]', 'error');
            });
            </text>
        }

        function showNotification(message, type) {
            const alertClass = type === 'success' ? 'alert-success' : 'alert-danger';
            const icon = type === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle';
            
            const alert = document.createElement('div');
            alert.className = `alert ${alertClass} alert-dismissible fade show position-fixed`;
            alert.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
            alert.innerHTML = `
                <i class="fas ${icon} me-2"></i>
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            
            document.body.appendChild(alert);
            
            setTimeout(() => {
                if (alert.parentNode) {
                    alert.parentNode.removeChild(alert);
                }
            }, 5000);
        }
    </script>
}